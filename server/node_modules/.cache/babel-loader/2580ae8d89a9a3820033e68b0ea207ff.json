{"ast":null,"code":"var _jsxFileName = \"/Users/Luke/Desktop/School_Fall_19/Capstone/ProgrammingWorkspace/PersonalBranch/WebEvents/src/AddName.js\";\nimport React, { Component } from \"react\";\nimport \"./AddName.css\"; // its own component that is encorporated in the list which adds to the list\n\nclass AddName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\"\n    };\n    this.updateHandler = this.updateHandler.bind(this);\n    this.addName = this.addName.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.updateHandler,\n      value: this.state.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Add\"));\n  } // updates state when eventhandler is called (onchange)\n\n\n  updateHandler(event) {\n    // sets username to the text box value (text string)\n    this.setState({\n      userName: event.target.value\n    });\n  } // adds the name to state and then clears the state of component\n  // this is called when button is clicked\n  // this function relies on modifying the state to run\n\n\n  addName() {\n    if (!(this.state.userName === \"\")) {\n      this.props.addName(this.state.userName);\n      this.setState({\n        userName: \"\"\n      });\n    }\n  }\n\n}\n\nexport default AddName;","map":{"version":3,"sources":["/Users/Luke/Desktop/School_Fall_19/Capstone/ProgrammingWorkspace/PersonalBranch/WebEvents/src/AddName.js"],"names":["React","Component","AddName","constructor","props","state","userName","updateHandler","bind","addName","render","event","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP,C,CACA;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKH,aAFjB;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKG,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF;AAWD,GAnB6B,CAoB9B;;;AACAF,EAAAA,aAAa,CAACI,KAAD,EAAQ;AACnB;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACD,GAxB6B,CAyB9B;AACA;AACA;;;AACAL,EAAAA,OAAO,GAAG;AACR,QAAI,EAAE,KAAKJ,KAAL,CAAWC,QAAX,KAAwB,EAA1B,CAAJ,EAAmC;AACjC,WAAKF,KAAL,CAAWK,OAAX,CAAmB,KAAKJ,KAAL,CAAWC,QAA9B;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;AACF;;AAjC6B;;AAoChC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AddName.css\";\n// its own component that is encorporated in the list which adds to the list\n\nclass AddName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { userName: \"\" };\n    this.updateHandler = this.updateHandler.bind(this);\n    this.addName = this.addName.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"AddName\">\n        <input\n          type=\"text\"\n          onChange={this.updateHandler}\n          value={this.state.userName}\n        />\n        <br />\n        <button onClick={this.addName}>Add</button>\n      </div>\n    );\n  }\n  // updates state when eventhandler is called (onchange)\n  updateHandler(event) {\n    // sets username to the text box value (text string)\n    this.setState({ userName: event.target.value });\n  }\n  // adds the name to state and then clears the state of component\n  // this is called when button is clicked\n  // this function relies on modifying the state to run\n  addName() {\n    if (!(this.state.userName === \"\")) {\n      this.props.addName(this.state.userName);\n      this.setState({ userName: \"\" });\n    }\n  }\n}\n\nexport default AddName;\n"]},"metadata":{},"sourceType":"module"}