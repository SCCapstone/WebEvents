{"ast":null,"code":"/* @license\nPapa Parse\nv5.1.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function (e, t) {\n  \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof module && \"undefined\" != typeof exports ? module.exports = t() : e.Papa = t();\n}(this, function s() {\n  \"use strict\";\n\n  var f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {};\n  var n = !f.document && !!f.postMessage,\n      o = n && /blob:/i.test((f.location || {}).protocol),\n      a = {},\n      h = 0,\n      b = {\n    parse: function (e, t) {\n      var r = (t = t || {}).dynamicTyping || !1;\n      q(r) && (t.dynamicTypingFunction = r, r = {});\n\n      if (t.dynamicTyping = r, t.transform = !!q(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n        var i = function () {\n          if (!b.WORKERS_SUPPORTED) return !1;\n          var e = (r = f.URL || f.webkitURL || null, i = s.toString(), b.BLOB_URL || (b.BLOB_URL = r.createObjectURL(new Blob([\"(\", i, \")();\"], {\n            type: \"text/javascript\"\n          })))),\n              t = new f.Worker(e);\n          var r, i;\n          return t.onmessage = _, t.id = h++, a[t.id] = t;\n        }();\n\n        return i.userStep = t.step, i.userChunk = t.chunk, i.userComplete = t.complete, i.userError = t.error, t.step = q(t.step), t.chunk = q(t.chunk), t.complete = q(t.complete), t.error = q(t.error), delete t.worker, void i.postMessage({\n          input: e,\n          config: t,\n          workerId: i.id\n        });\n      }\n\n      var n = null;\n      b.NODE_STREAM_INPUT, \"string\" == typeof e ? n = t.download ? new l(t) : new p(t) : !0 === e.readable && q(e.read) && q(e.on) ? n = new m(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n      return n.stream(e);\n    },\n    unparse: function (e, t) {\n      var n = !1,\n          _ = !0,\n          g = \",\",\n          v = \"\\r\\n\",\n          s = '\"',\n          a = s + s,\n          r = !1,\n          i = null;\n\n      !function () {\n        if (\"object\" != typeof t) return;\n        \"string\" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n          return -1 !== t.delimiter.indexOf(e);\n        }).length || (g = t.delimiter);\n        (\"boolean\" == typeof t.quotes || \"function\" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n        \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (r = t.skipEmptyLines);\n        \"string\" == typeof t.newline && (v = t.newline);\n        \"string\" == typeof t.quoteChar && (s = t.quoteChar);\n        \"boolean\" == typeof t.header && (_ = t.header);\n\n        if (Array.isArray(t.columns)) {\n          if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n          i = t.columns;\n        }\n\n        void 0 !== t.escapeChar && (a = t.escapeChar + s);\n      }();\n      var o = new RegExp(U(s), \"g\");\n      \"string\" == typeof e && (e = JSON.parse(e));\n\n      if (Array.isArray(e)) {\n        if (!e.length || Array.isArray(e[0])) return u(null, e, r);\n        if (\"object\" == typeof e[0]) return u(i || h(e[0]), e, r);\n      } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : h(e.data[0])), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), u(e.fields || [], e.data || [], r);\n\n      throw new Error(\"Unable to serialize unrecognized input\");\n\n      function h(e) {\n        if (\"object\" != typeof e) return [];\n        var t = [];\n\n        for (var r in e) t.push(r);\n\n        return t;\n      }\n\n      function u(e, t, r) {\n        var i = \"\";\n        \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n        var n = Array.isArray(e) && 0 < e.length,\n            s = !Array.isArray(t[0]);\n\n        if (n && _) {\n          for (var a = 0; a < e.length; a++) 0 < a && (i += g), i += y(e[a], a);\n\n          0 < t.length && (i += v);\n        }\n\n        for (var o = 0; o < t.length; o++) {\n          var h = n ? e.length : t[o].length,\n              u = !1,\n              f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n          if (r && !n && (u = \"greedy\" === r ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === r && n) {\n            for (var d = [], l = 0; l < h; l++) {\n              var c = s ? e[l] : l;\n              d.push(t[o][c]);\n            }\n\n            u = \"\" === d.join(\"\").trim();\n          }\n\n          if (!u) {\n            for (var p = 0; p < h; p++) {\n              0 < p && !f && (i += g);\n              var m = n && s ? e[p] : p;\n              i += y(t[o][m], p);\n            }\n\n            o < t.length - 1 && (!r || 0 < h && !f) && (i += v);\n          }\n        }\n\n        return i;\n      }\n\n      function y(e, t) {\n        if (null == e) return \"\";\n        if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n\n        var r = e.toString().replace(o, a),\n            i = \"boolean\" == typeof n && n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n          for (var r = 0; r < t.length; r++) if (-1 < e.indexOf(t[r])) return !0;\n\n          return !1;\n        }(r, b.BAD_DELIMITERS) || -1 < r.indexOf(g) || \" \" === r.charAt(0) || \" \" === r.charAt(r.length - 1);\n\n        return i ? s + r + s : r;\n      }\n    }\n  };\n\n  if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = \"\\ufeff\", b.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = \",\", b.Parser = E, b.ParserHandle = r, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = m, f.jQuery) {\n    var d = f.jQuery;\n\n    d.fn.parse = function (o) {\n      var r = o.config || {},\n          h = [];\n      return this.each(function (e) {\n        if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n        for (var t = 0; t < this.files.length; t++) h.push({\n          file: this.files[t],\n          inputElem: this,\n          instanceConfig: d.extend({}, r)\n        });\n      }), e(), this;\n\n      function e() {\n        if (0 !== h.length) {\n          var e,\n              t,\n              r,\n              i,\n              n = h[0];\n\n          if (q(o.before)) {\n            var s = o.before(n.file, n.inputElem);\n\n            if (\"object\" == typeof s) {\n              if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, r = n.inputElem, i = s.reason, void (q(o.error) && o.error({\n                name: e\n              }, t, r, i));\n              if (\"skip\" === s.action) return void u();\n              \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n            } else if (\"skip\" === s) return void u();\n          }\n\n          var a = n.instanceConfig.complete;\n          n.instanceConfig.complete = function (e) {\n            q(a) && a(e, n.file, n.inputElem), u();\n          }, b.parse(n.file, n.instanceConfig);\n        } else q(o.complete) && o.complete();\n      }\n\n      function u() {\n        h.splice(0, 1), e();\n      }\n    };\n  }\n\n  function u(e) {\n    this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n      data: [],\n      errors: [],\n      meta: {}\n    }, function (e) {\n      var t = w(e);\n      t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n      this._handle = new r(t), (this._handle.streamer = this)._config = t;\n    }.call(this, e), this.parseChunk = function (e, t) {\n      if (this.isFirstChunk && q(this._config.beforeFirstChunk)) {\n        var r = this._config.beforeFirstChunk(e);\n\n        void 0 !== r && (e = r);\n      }\n\n      this.isFirstChunk = !1, this._halted = !1;\n      var i = this._partialLine + e;\n      this._partialLine = \"\";\n\n      var n = this._handle.parse(i, this._baseIndex, !this._finished);\n\n      if (!this._handle.paused() && !this._handle.aborted()) {\n        var s = n.meta.cursor;\n        this._finished || (this._partialLine = i.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n        var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n        if (o) f.postMessage({\n          results: n,\n          workerId: b.WORKER_ID,\n          finished: a\n        });else if (q(this._config.chunk) && !t) {\n          if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n          n = void 0, this._completeResults = void 0;\n        }\n        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !q(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n      }\n\n      this._halted = !0;\n    }, this._sendError = function (e) {\n      q(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n        workerId: b.WORKER_ID,\n        error: e,\n        finished: !1\n      });\n    };\n  }\n\n  function l(e) {\n    var i;\n    (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), u.call(this, e), this._nextChunk = n ? function () {\n      this._readChunk(), this._chunkLoaded();\n    } : function () {\n      this._readChunk();\n    }, this.stream = function (e) {\n      this._input = e, this._nextChunk();\n    }, this._readChunk = function () {\n      if (this._finished) this._chunkLoaded();else {\n        if (i = new XMLHttpRequest(), this._config.withCredentials && (i.withCredentials = this._config.withCredentials), n || (i.onload = y(this._chunkLoaded, this), i.onerror = y(this._chunkError, this)), i.open(\"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n          var e = this._config.downloadRequestHeaders;\n\n          for (var t in e) i.setRequestHeader(t, e[t]);\n        }\n\n        if (this._config.chunkSize) {\n          var r = this._start + this._config.chunkSize - 1;\n          i.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + r);\n        }\n\n        try {\n          i.send();\n        } catch (e) {\n          this._chunkError(e.message);\n        }\n\n        n && 0 === i.status && this._chunkError();\n      }\n    }, this._chunkLoaded = function () {\n      4 === i.readyState && (i.status < 200 || 400 <= i.status ? this._chunkError() : (this._start += i.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n        var t = e.getResponseHeader(\"Content-Range\");\n        if (null === t) return -1;\n        return parseInt(t.substr(t.lastIndexOf(\"/\") + 1));\n      }(i), this.parseChunk(i.responseText)));\n    }, this._chunkError = function (e) {\n      var t = i.statusText || e;\n\n      this._sendError(new Error(t));\n    };\n  }\n\n  function c(e) {\n    var i, n;\n    (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), u.call(this, e);\n    var s = \"undefined\" != typeof FileReader;\n    this.stream = function (e) {\n      this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((i = new FileReader()).onload = y(this._chunkLoaded, this), i.onerror = y(this._chunkError, this)) : i = new FileReaderSync(), this._nextChunk();\n    }, this._nextChunk = function () {\n      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n    }, this._readChunk = function () {\n      var e = this._input;\n\n      if (this._config.chunkSize) {\n        var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n        e = n.call(e, this._start, t);\n      }\n\n      var r = i.readAsText(e, this._config.encoding);\n      s || this._chunkLoaded({\n        target: {\n          result: r\n        }\n      });\n    }, this._chunkLoaded = function (e) {\n      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n    }, this._chunkError = function () {\n      this._sendError(i.error);\n    };\n  }\n\n  function p(e) {\n    var r;\n    u.call(this, e = e || {}), this.stream = function (e) {\n      return r = e, this._nextChunk();\n    }, this._nextChunk = function () {\n      if (!this._finished) {\n        var e = this._config.chunkSize,\n            t = e ? r.substr(0, e) : r;\n        return r = e ? r.substr(e) : \"\", this._finished = !r, this.parseChunk(t);\n      }\n    };\n  }\n\n  function m(e) {\n    u.call(this, e = e || {});\n    var t = [],\n        r = !0,\n        i = !1;\n    this.pause = function () {\n      u.prototype.pause.apply(this, arguments), this._input.pause();\n    }, this.resume = function () {\n      u.prototype.resume.apply(this, arguments), this._input.resume();\n    }, this.stream = function (e) {\n      this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n    }, this._checkIsFinished = function () {\n      i && 1 === t.length && (this._finished = !0);\n    }, this._nextChunk = function () {\n      this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : r = !0;\n    }, this._streamData = y(function (e) {\n      try {\n        t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), r && (r = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n      } catch (e) {\n        this._streamError(e);\n      }\n    }, this), this._streamError = y(function (e) {\n      this._streamCleanUp(), this._sendError(e);\n    }, this), this._streamEnd = y(function () {\n      this._streamCleanUp(), i = !0, this._streamData(\"\");\n    }, this), this._streamCleanUp = y(function () {\n      this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n    }, this);\n  }\n\n  function r(g) {\n    var a,\n        o,\n        h,\n        i = Math.pow(2, 53),\n        n = -i,\n        s = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i,\n        u = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,\n        t = this,\n        r = 0,\n        f = 0,\n        d = !1,\n        e = !1,\n        l = [],\n        c = {\n      data: [],\n      errors: [],\n      meta: {}\n    };\n\n    if (q(g.step)) {\n      var p = g.step;\n\n      g.step = function (e) {\n        if (c = e, _()) m();else {\n          if (m(), 0 === c.data.length) return;\n          r += e.data.length, g.preview && r > g.preview ? o.abort() : p(c, t);\n        }\n      };\n    }\n\n    function v(e) {\n      return \"greedy\" === g.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n    }\n\n    function m() {\n      if (c && h && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + b.DefaultDelimiter + \"'\"), h = !1), g.skipEmptyLines) for (var e = 0; e < c.data.length; e++) v(c.data[e]) && c.data.splice(e--, 1);\n      return _() && function () {\n        if (!c) return;\n\n        function e(e) {\n          q(g.transformHeader) && (e = g.transformHeader(e)), l.push(e);\n        }\n\n        if (Array.isArray(c.data[0])) {\n          for (var t = 0; _() && t < c.data.length; t++) c.data[t].forEach(e);\n\n          c.data.splice(0, 1);\n        } else c.data.forEach(e);\n      }(), function () {\n        if (!c || !g.header && !g.dynamicTyping && !g.transform) return c;\n\n        function e(e, t) {\n          var r,\n              i = g.header ? {} : [];\n\n          for (r = 0; r < e.length; r++) {\n            var n = r,\n                s = e[r];\n            g.header && (n = r >= l.length ? \"__parsed_extra\" : l[r]), g.transform && (s = g.transform(s, n)), s = y(n, s), \"__parsed_extra\" === n ? (i[n] = i[n] || [], i[n].push(s)) : i[n] = s;\n          }\n\n          return g.header && (r > l.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + l.length + \" fields but parsed \" + r, f + t) : r < l.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + l.length + \" fields but parsed \" + r, f + t)), i;\n        }\n\n        var t = 1;\n        !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n        g.header && c.meta && (c.meta.fields = l);\n        return f += t, c;\n      }();\n    }\n\n    function _() {\n      return g.header && 0 === l.length;\n    }\n\n    function y(e, t) {\n      return r = e, g.dynamicTypingFunction && void 0 === g.dynamicTyping[r] && (g.dynamicTyping[r] = g.dynamicTypingFunction(r)), !0 === (g.dynamicTyping[r] || g.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (function (e) {\n        if (s.test(e)) {\n          var t = parseFloat(e);\n          if (n < t && t < i) return !0;\n        }\n\n        return !1;\n      }(t) ? parseFloat(t) : u.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n      var r;\n    }\n\n    function k(e, t, r, i) {\n      c.errors.push({\n        type: e,\n        code: t,\n        message: r,\n        row: i\n      });\n    }\n\n    this.parse = function (e, t, r) {\n      var i = g.quoteChar || '\"';\n      if (g.newline || (g.newline = function (e, t) {\n        e = e.substr(0, 1048576);\n        var r = new RegExp(U(t) + \"([^]*?)\" + U(t), \"gm\"),\n            i = (e = e.replace(r, \"\")).split(\"\\r\"),\n            n = e.split(\"\\n\"),\n            s = 1 < n.length && n[0].length < i[0].length;\n        if (1 === i.length || s) return \"\\n\";\n\n        for (var a = 0, o = 0; o < i.length; o++) \"\\n\" === i[o][0] && a++;\n\n        return a >= i.length / 2 ? \"\\r\\n\" : \"\\r\";\n      }(e, i)), h = !1, g.delimiter) q(g.delimiter) && (g.delimiter = g.delimiter(e), c.meta.delimiter = g.delimiter);else {\n        var n = function (e, t, r, i, n) {\n          var s, a, o, h;\n          n = n || [\",\", \"\\t\", \"|\", \";\", b.RECORD_SEP, b.UNIT_SEP];\n\n          for (var u = 0; u < n.length; u++) {\n            var f = n[u],\n                d = 0,\n                l = 0,\n                c = 0;\n            o = void 0;\n\n            for (var p = new E({\n              comments: i,\n              delimiter: f,\n              newline: t,\n              preview: 10\n            }).parse(e), m = 0; m < p.data.length; m++) if (r && v(p.data[m])) c++;else {\n              var _ = p.data[m].length;\n              l += _, void 0 !== o ? 0 < _ && (d += Math.abs(_ - o), o = _) : o = _;\n            }\n\n            0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === h || h < l) && 1.99 < l && (a = d, s = f, h = l);\n          }\n\n          return {\n            successful: !!(g.delimiter = s),\n            bestDelimiter: s\n          };\n        }(e, g.newline, g.skipEmptyLines, g.comments, g.delimitersToGuess);\n\n        n.successful ? g.delimiter = n.bestDelimiter : (h = !0, g.delimiter = b.DefaultDelimiter), c.meta.delimiter = g.delimiter;\n      }\n      var s = w(g);\n      return g.preview && g.header && s.preview++, a = e, o = new E(s), c = o.parse(a, t, r), m(), d ? {\n        meta: {\n          paused: !0\n        }\n      } : c || {\n        meta: {\n          paused: !1\n        }\n      };\n    }, this.paused = function () {\n      return d;\n    }, this.pause = function () {\n      d = !0, o.abort(), a = a.substr(o.getCharIndex());\n    }, this.resume = function () {\n      t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(this.resume, 3);\n    }, this.aborted = function () {\n      return e;\n    }, this.abort = function () {\n      e = !0, o.abort(), c.meta.aborted = !0, q(g.complete) && g.complete(c), a = \"\";\n    };\n  }\n\n  function U(e) {\n    return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  function E(e) {\n    var O,\n        D = (e = e || {}).delimiter,\n        I = e.newline,\n        T = e.comments,\n        A = e.step,\n        L = e.preview,\n        F = e.fastMode,\n        M = O = void 0 === e.quoteChar ? '\"' : e.quoteChar;\n    if (void 0 !== e.escapeChar && (M = e.escapeChar), (\"string\" != typeof D || -1 < b.BAD_DELIMITERS.indexOf(D)) && (D = \",\"), T === D) throw new Error(\"Comment character same as delimiter\");\n    !0 === T ? T = \"#\" : (\"string\" != typeof T || -1 < b.BAD_DELIMITERS.indexOf(T)) && (T = !1), \"\\n\" !== I && \"\\r\" !== I && \"\\r\\n\" !== I && (I = \"\\n\");\n    var z = 0,\n        j = !1;\n    this.parse = function (a, r, t) {\n      if (\"string\" != typeof a) throw new Error(\"Input must be a string\");\n      var i = a.length,\n          e = D.length,\n          n = I.length,\n          s = T.length,\n          o = q(A),\n          h = [],\n          u = [],\n          f = [],\n          d = z = 0;\n      if (!a) return R();\n\n      if (F || !1 !== F && -1 === a.indexOf(O)) {\n        for (var l = a.split(I), c = 0; c < l.length; c++) {\n          if (f = l[c], z += f.length, c !== l.length - 1) z += I.length;else if (t) return R();\n\n          if (!T || f.substr(0, s) !== T) {\n            if (o) {\n              if (h = [], b(f.split(D)), S(), j) return R();\n            } else b(f.split(D));\n\n            if (L && L <= c) return h = h.slice(0, L), R(!0);\n          }\n        }\n\n        return R();\n      }\n\n      for (var p = a.indexOf(D, z), m = a.indexOf(I, z), _ = new RegExp(U(M) + U(O), \"g\"), g = a.indexOf(O, z);;) if (a[z] !== O) {\n        if (T && 0 === f.length && a.substr(z, s) === T) {\n          if (-1 === m) return R();\n          z = m + n, m = a.indexOf(I, z), p = a.indexOf(D, z);\n        } else {\n          if (-1 !== p && (p < m || -1 === m)) {\n            if (!(p < g)) {\n              f.push(a.substring(z, p)), z = p + e, p = a.indexOf(D, z);\n              continue;\n            }\n\n            var v = x(p, g, m);\n\n            if (v && void 0 !== v.nextDelim) {\n              p = v.nextDelim, g = v.quoteSearch, f.push(a.substring(z, p)), z = p + e, p = a.indexOf(D, z);\n              continue;\n            }\n          }\n\n          if (-1 === m) break;\n          if (f.push(a.substring(z, m)), C(m + n), o && (S(), j)) return R();\n          if (L && h.length >= L) return R(!0);\n        }\n      } else for (g = z, z++;;) {\n        if (-1 === (g = a.indexOf(O, g + 1))) return t || u.push({\n          type: \"Quotes\",\n          code: \"MissingQuotes\",\n          message: \"Quoted field unterminated\",\n          row: h.length,\n          index: z\n        }), w();\n        if (g === i - 1) return w(a.substring(z, g).replace(_, O));\n\n        if (O !== M || a[g + 1] !== M) {\n          if (O === M || 0 === g || a[g - 1] !== M) {\n            var y = E(-1 === m ? p : Math.min(p, m));\n\n            if (a[g + 1 + y] === D) {\n              f.push(a.substring(z, g).replace(_, O)), a[z = g + 1 + y + e] !== O && (g = a.indexOf(O, z)), p = a.indexOf(D, z), m = a.indexOf(I, z);\n              break;\n            }\n\n            var k = E(m);\n\n            if (a.substr(g + 1 + k, n) === I) {\n              if (f.push(a.substring(z, g).replace(_, O)), C(g + 1 + k + n), p = a.indexOf(D, z), g = a.indexOf(O, z), o && (S(), j)) return R();\n              if (L && h.length >= L) return R(!0);\n              break;\n            }\n\n            u.push({\n              type: \"Quotes\",\n              code: \"InvalidQuotes\",\n              message: \"Trailing quote on quoted field is malformed\",\n              row: h.length,\n              index: z\n            }), g++;\n          }\n        } else g++;\n      }\n\n      return w();\n\n      function b(e) {\n        h.push(e), d = z;\n      }\n\n      function E(e) {\n        var t = 0;\n\n        if (-1 !== e) {\n          var r = a.substring(g + 1, e);\n          r && \"\" === r.trim() && (t = r.length);\n        }\n\n        return t;\n      }\n\n      function w(e) {\n        return t || (void 0 === e && (e = a.substr(z)), f.push(e), z = i, b(f), o && S()), R();\n      }\n\n      function C(e) {\n        z = e, b(f), f = [], m = a.indexOf(I, z);\n      }\n\n      function R(e, t) {\n        return {\n          data: t || !1 ? h[0] : h,\n          errors: u,\n          meta: {\n            delimiter: D,\n            linebreak: I,\n            aborted: j,\n            truncated: !!e,\n            cursor: d + (r || 0)\n          }\n        };\n      }\n\n      function S() {\n        A(R(void 0, !0)), h = [], u = [];\n      }\n\n      function x(e, t, r) {\n        var i = {\n          nextDelim: void 0,\n          quoteSearch: void 0\n        },\n            n = a.indexOf(O, t + 1);\n\n        if (t < e && e < n && (n < r || -1 === r)) {\n          var s = a.indexOf(D, n);\n          if (-1 === s) return i;\n          n < s && (n = a.indexOf(O, n + 1)), i = x(s, n, r);\n        } else i = {\n          nextDelim: e,\n          quoteSearch: t\n        };\n\n        return i;\n      }\n    }, this.abort = function () {\n      j = !0;\n    }, this.getCharIndex = function () {\n      return z;\n    };\n  }\n\n  function _(e) {\n    var t = e.data,\n        r = a[t.workerId],\n        i = !1;\n    if (t.error) r.userError(t.error, t.file);else if (t.results && t.results.data) {\n      var n = {\n        abort: function () {\n          i = !0, g(t.workerId, {\n            data: [],\n            errors: [],\n            meta: {\n              aborted: !0\n            }\n          });\n        },\n        pause: v,\n        resume: v\n      };\n\n      if (q(r.userStep)) {\n        for (var s = 0; s < t.results.data.length && (r.userStep({\n          data: t.results.data[s],\n          errors: t.results.errors,\n          meta: t.results.meta\n        }, n), !i); s++);\n\n        delete t.results;\n      } else q(r.userChunk) && (r.userChunk(t.results, n, t.file), delete t.results);\n    }\n    t.finished && !i && g(t.workerId, t.results);\n  }\n\n  function g(e, t) {\n    var r = a[e];\n    q(r.userComplete) && r.userComplete(t), r.terminate(), delete a[e];\n  }\n\n  function v() {\n    throw new Error(\"Not implemented.\");\n  }\n\n  function w(e) {\n    if (\"object\" != typeof e || null === e) return e;\n    var t = Array.isArray(e) ? [] : {};\n\n    for (var r in e) t[r] = w(e[r]);\n\n    return t;\n  }\n\n  function y(e, t) {\n    return function () {\n      e.apply(t, arguments);\n    };\n  }\n\n  function q(e) {\n    return \"function\" == typeof e;\n  }\n\n  return o && (f.onmessage = function (e) {\n    var t = e.data;\n    void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n    if (\"string\" == typeof t.input) f.postMessage({\n      workerId: b.WORKER_ID,\n      results: b.parse(t.input, t.config),\n      finished: !0\n    });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n      var r = b.parse(t.input, t.config);\n      r && f.postMessage({\n        workerId: b.WORKER_ID,\n        results: r,\n        finished: !0\n      });\n    }\n  }), (l.prototype = Object.create(u.prototype)).constructor = l, (c.prototype = Object.create(u.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (m.prototype = Object.create(u.prototype)).constructor = m, b;\n});","map":null,"metadata":{},"sourceType":"script"}